{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;;;;ICK7D,wEAAuD;IAAA,+FAAoC;IAAA,4DAAI;;ACb9F,MAAM,YAAY;IAGvB;QADA,UAAK,GAAG,kBAAkB,CAAC;IACb,CAAC;IAEf,QAAQ;IAER,CAAC;IAED,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;IAC7C,CAAC;;wEAXU,YAAY;4FAAZ,YAAY;QDPzB,yEAAQ;QACN,oEAAqD;QACvD,4DAAS;QAET,uEAAM;QACJ,qEAAI;QAAA,4EAAiB;QAAA,uEAAM;QAAA,gEAAK;QAAA,4DAAO;QAAA,4DAAK;QAC5C,uEAAoB;QAAA,qFAA0B;QAAA,4DAAI;QAElD,6EAA0C;QAApC,wIAAY,cAAU,IAAC;QAC3B,uEAAK;QACH,uEAA2B;QAC3B,0EAQoC;QACpC,sGAA+F;QACjG,4DAAM;QACN,uEAAK;QACH,6EAAsB;QAAA,qEAAS;QAAA,4DAAS;QAC1C,4DAAM;QAER,4DAAO;QAGP,0EAAuB;QACrB,sEAAoF;QACtF,4DAAM;QAGR,4DAAO;QAML,0EAAQ;QACN,2EAAkB;QAChB,uEAAK;QACH,oEAAuC;QACzC,4DAAM;QACN,uEAAK;QACH,oEAAsC;QACxC,4DAAM;QACN,uEAAK;QACH,oEAAsC;QACxC,4DAAM;QACR,4DAAM;QAEN,yEAAkB;QAAA,uGAA2C;QAAA,4DAAI;QACnE,4DAAS;;;QAlCa,2DAAmC;QAAnC,2FAAmC;;;;;;;;;;;;;;AEnB3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AAEX;AACF;;AAatC,MAAM,SAAS;;kEAAT,SAAS;wFAAT,SAAS,cAFR,2DAAY;6FADb,EAAE,YAJJ;YACP,uEAAa;YACb,0DAAW;SACZ;mIAIU,SAAS,mBATlB,2DAAY,aAGZ,uEAAa;QACb,0DAAW;;;;;;;;;;;;;;;;;;;ACZgC;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<header>\n  <img src=\"../assets/images/logo.svg\" alt=\"ping logo\">\n</header>\n\n<main>\n  <h1>We are launching <span>soon!</span></h1>\n  <p class=\"subtitle\">Subscribe and get notified</p>\n\n  <form (ngSubmit)=\"onSubmit()\" #f=\"ngForm\">\n    <div>\n      <label for=\"email\"></label>\n      <input\n      type=\"email\"\n      id=\"email\"\n      name=\"email\"\n      ngModel\n      required\n      email\n      #email=\"ngModel\"\n      placeholder=\"Your email address...\">\n      <p class=\"error\" *ngIf=\"!email.valid && email.touched\">Please provide a valid email address</p>\n    </div>\n    <div>\n      <button type=\"submit\">Notify Me</button>\n    </div>\n\n  </form>\n\n\n  <div id=\"illustration\">\n    <img src=\"../assets/images/illustration-dashboard.png\" alt=\"illustration-dashboard\">\n  </div>\n\n\n</main>\n\n\n\n\n\n  <footer>\n    <div id=\"socials\">\n      <div>\n        <i class=\"fa-brands fa-facebook-f\"></i>\n      </div>\n      <div>\n        <i class=\"fa-brands fa-x-twitter\"></i>\n      </div>\n      <div>\n        <i class=\"fa-brands fa-instagram\"></i>\n      </div>\n    </div>\n\n    <p id=\"copyright\">&copy; Copyright Ping. All rights reserved.</p>\n  </footer>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit{\n\n  title = 'ping-coming-soon';\n  constructor(){}\n\n  ngOnInit(): void {\n\n  }\n\n  onSubmit(){\n    console.log('form submitted successfully');\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}